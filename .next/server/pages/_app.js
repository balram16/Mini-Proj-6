/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/_app";
exports.ids = ["pages/_app"];
exports.modules = {

/***/ "./src/lib/contexts/UserContext.tsx":
/*!******************************************!*\
  !*** ./src/lib/contexts/UserContext.tsx ***!
  \******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UserProvider: () => (/* binding */ UserProvider),\n/* harmony export */   useUser: () => (/* binding */ useUser)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var sonner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! sonner */ \"sonner\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([sonner__WEBPACK_IMPORTED_MODULE_3__]);\nsonner__WEBPACK_IMPORTED_MODULE_3__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n/* __next_internal_client_entry_do_not_use__ UserProvider,useUser auto */ \n\n\n\n// Create mock books for testing\nconst mockBooks = [\n    {\n        _id: \"book-1\",\n        title: \"The Great Gatsby\",\n        author: \"F. Scott Fitzgerald\",\n        description: \"A classic novel about the American Dream set in the Jazz Age.\",\n        coverImage: \"https://source.unsplash.com/random/400x600/?book,gatsby\",\n        genre: [\n            \"Fiction\",\n            \"Classic\"\n        ],\n        rating: 4.5,\n        rentPrice: 5.99,\n        condition: \"Good\",\n        owner: \"2\",\n        available: true,\n        createdAt: \"2023-01-15T12:00:00Z\",\n        likes: [],\n        comments: []\n    },\n    {\n        _id: \"book-2\",\n        title: \"To Kill a Mockingbird\",\n        author: \"Harper Lee\",\n        description: \"A powerful story about racial injustice and moral growth in the American South.\",\n        coverImage: \"https://source.unsplash.com/random/400x600/?book,mockingbird\",\n        genre: [\n            \"Fiction\",\n            \"Classic\"\n        ],\n        rating: 4.8,\n        rentPrice: 6.99,\n        condition: \"Like New\",\n        owner: \"2\",\n        available: true,\n        createdAt: \"2023-02-20T15:30:00Z\",\n        likes: [],\n        comments: []\n    },\n    {\n        _id: \"book-3\",\n        title: \"Harry Potter and the Philosopher's Stone\",\n        author: \"J.K. Rowling\",\n        description: \"The first book in the Harry Potter series following the young wizard's adventures.\",\n        coverImage: \"https://source.unsplash.com/random/400x600/?book,harry-potter\",\n        genre: [\n            \"Fantasy\",\n            \"Young Adult\"\n        ],\n        rating: 4.7,\n        rentPrice: 7.99,\n        condition: \"Good\",\n        owner: \"2\",\n        available: true,\n        createdAt: \"2023-03-10T09:45:00Z\",\n        likes: [],\n        comments: []\n    }\n];\n// Create a mock user for testing\nconst mockUser = {\n    _id: \"1\",\n    name: \"Test User\",\n    email: \"test@example.com\",\n    avatar: \"https://api.dicebear.com/7.x/avataaars/svg?seed=TestUser\",\n    bio: \"I love reading and sharing books!\",\n    location: \"New York, NY\",\n    phone: \"+1234567890\",\n    books: [],\n    bookmarks: [],\n    borrowedBooks: [],\n    borrowedBooks: []\n};\nconst mockSettings = {\n    emailNotifications: true,\n    smsNotifications: false,\n    language: \"en\",\n    currency: \"USD\"\n};\nconst UserContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction UserProvider({ children }) {\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [settings, setSettings] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [allBooks, setAllBooks] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(mockBooks);\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    // Function to load user data from token\n    const loadUser = async ()=>{\n        try {\n            const token = localStorage.getItem(\"booklendiverse_token\");\n            if (!token) {\n                setIsLoading(false);\n                return;\n            }\n            // Make API call to get user data\n            const response = await fetch(\"http://localhost:5000/api/users/me\", {\n                method: \"GET\",\n                headers: {\n                    \"x-auth-token\": token,\n                    \"Content-Type\": \"application/json\"\n                },\n                credentials: \"include\"\n            });\n            if (!response.ok) {\n                // If unauthorized, clear storage\n                if (response.status === 401) {\n                    localStorage.removeItem(\"booklendiverse_token\");\n                    localStorage.removeItem(\"booklendiverse_user\");\n                }\n                setIsLoading(false);\n                return;\n            }\n            const userData = await response.json();\n            setUser(userData);\n            // Could also fetch settings from API if needed\n            setSettings(mockSettings);\n        } catch (error) {\n            console.error(\"Error loading user:\", error);\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    // Load user on initial mount\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        loadUser();\n    }, []);\n    // Load books from localStorage\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const storedBooks = localStorage.getItem(\"booklendiverse_books\");\n        if (storedBooks) {\n            try {\n                const parsedBooks = JSON.parse(storedBooks);\n                setAllBooks([\n                    ...mockBooks,\n                    ...parsedBooks\n                ]);\n            } catch (error) {\n                console.error(\"Error parsing stored books:\", error);\n            }\n        }\n    }, []);\n    // Save books to localStorage whenever they change\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (allBooks.length > mockBooks.length) {\n            const booksToStore = allBooks.filter((book)=>!mockBooks.some((mockBook)=>mockBook._id === book._id));\n            localStorage.setItem(\"booklendiverse_books\", JSON.stringify(booksToStore));\n        }\n    }, [\n        allBooks\n    ]);\n    const login = async (email, password)=>{\n        try {\n            // Make a real API call to the backend\n            const response = await fetch(`http://localhost:5000/api/users/login`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    email,\n                    password\n                }),\n                credentials: \"include\"\n            });\n            const data = await response.json();\n            if (!response.ok) {\n                throw new Error(data.message || \"Login failed\");\n            }\n            console.log(\"Login response:\", data);\n            // Set token in localStorage\n            localStorage.setItem(\"booklendiverse_token\", data.token);\n            console.log(\"Token stored:\", data.token);\n            // Store user data - ensure _id is available\n            const userData = {\n                ...data.user,\n                _id: data.user._id || data.user.id // Ensure _id is available\n            };\n            setUser(userData);\n            localStorage.setItem(\"booklendiverse_user\", JSON.stringify(userData));\n            // Initialize settings\n            setSettings(mockSettings);\n            // Reload user data to ensure we have complete information\n            await loadUser();\n            sonner__WEBPACK_IMPORTED_MODULE_3__.toast.success(\"Login successful\");\n            return {\n                redirectTo: \"/dashboard\"\n            };\n        } catch (error) {\n            console.error(\"Error logging in:\", error);\n            sonner__WEBPACK_IMPORTED_MODULE_3__.toast.error(error instanceof Error ? error.message : \"Login failed. Please check your credentials.\");\n            throw error;\n        }\n    };\n    const register = async (userData)=>{\n        try {\n            // Make real API call to the backend\n            const response = await fetch(`http://localhost:5000/api/users/signup`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(userData),\n                credentials: \"include\"\n            });\n            const data = await response.json();\n            if (!response.ok) {\n                throw new Error(data.message || \"Registration failed\");\n            }\n            // Set token in localStorage\n            localStorage.setItem(\"booklendiverse_token\", data.token);\n            // Store user data - ensure _id is available\n            const newUser = {\n                ...data.user,\n                _id: data.user._id || data.user.id // Ensure _id is available\n            };\n            setUser(newUser);\n            localStorage.setItem(\"booklendiverse_user\", JSON.stringify(newUser));\n            // Initialize settings\n            setSettings(mockSettings);\n            sonner__WEBPACK_IMPORTED_MODULE_3__.toast.success(\"Registration successful\");\n            return newUser;\n        } catch (error) {\n            console.error(\"Error registering:\", error);\n            sonner__WEBPACK_IMPORTED_MODULE_3__.toast.error(error instanceof Error ? error.message : \"Registration failed. Please try again.\");\n            throw error;\n        }\n    };\n    const logout = async ()=>{\n        try {\n            const token = localStorage.getItem(\"booklendiverse_token\");\n            // Make API call to logout (invalidate token on server side)\n            if (token) {\n                try {\n                    await fetch(\"http://localhost:5000/api/users/logout\", {\n                        method: \"POST\",\n                        headers: {\n                            \"x-auth-token\": token,\n                            \"Content-Type\": \"application/json\"\n                        },\n                        credentials: \"include\"\n                    });\n                } catch (error) {\n                    console.error(\"Error during logout API call:\", error);\n                // Continue with client-side logout even if API call fails\n                }\n            }\n            // Clear local storage\n            localStorage.removeItem(\"booklendiverse_token\");\n            localStorage.removeItem(\"booklendiverse_user\");\n            // Reset state\n            setUser(null);\n            setSettings(null);\n            sonner__WEBPACK_IMPORTED_MODULE_3__.toast.success(\"Logged out successfully\");\n            // Redirect to home page\n            if (false) {}\n        } catch (error) {\n            console.error(\"Error logging out:\", error);\n            sonner__WEBPACK_IMPORTED_MODULE_3__.toast.error(\"Failed to log out. Please try again.\");\n            throw error;\n        }\n    };\n    const updateProfile = async (data)=>{\n        try {\n            const token = localStorage.getItem(\"booklendiverse_token\");\n            if (!token) throw new Error(\"Not authenticated\");\n            if (!user) throw new Error(\"No user logged in\");\n            // Make sure we're sending the correct fields\n            const updateData = {\n                name: data.name,\n                email: data.email,\n                phone: data.phone,\n                location: data.location,\n                bio: data.bio,\n                upiId: data.upiId\n            };\n            console.log(\"Sending profile update data:\", updateData);\n            console.log(\"Using token:\", token);\n            // Make API call to update profile\n            const response = await fetch(\"http://localhost:5000/api/users/profile\", {\n                method: \"PUT\",\n                headers: {\n                    \"x-auth-token\": token,\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(updateData),\n                credentials: \"include\"\n            });\n            const responseData = await response.json();\n            console.log(\"Server response:\", responseData);\n            if (!response.ok) {\n                throw new Error(responseData.message || responseData.error || \"Failed to update profile\");\n            }\n            // Update local user data\n            setUser((prevUser)=>({\n                    ...prevUser,\n                    ...responseData\n                }));\n            // Update localStorage\n            localStorage.setItem(\"booklendiverse_user\", JSON.stringify({\n                ...user,\n                ...responseData\n            }));\n            sonner__WEBPACK_IMPORTED_MODULE_3__.toast.success(\"Profile updated successfully\");\n            return responseData;\n        } catch (error) {\n            console.error(\"Error updating profile:\", error);\n            sonner__WEBPACK_IMPORTED_MODULE_3__.toast.error(error instanceof Error ? error.message : \"Failed to update profile\");\n            throw error;\n        }\n    };\n    const updateSettings = async (data)=>{\n        try {\n            // In a real app, we'd send a request to the backend\n            // For now, we'll just update the settings data\n            const updatedSettings = {\n                ...mockSettings,\n                ...data\n            };\n            setSettings(updatedSettings);\n            sonner__WEBPACK_IMPORTED_MODULE_3__.toast.success(\"Settings updated successfully\");\n            return updatedSettings;\n        } catch (error) {\n            console.error(\"Error updating settings:\", error);\n            sonner__WEBPACK_IMPORTED_MODULE_3__.toast.error(\"Failed to update settings\");\n            throw error;\n        }\n    };\n    const addPaymentMethod = async (paymentMethod)=>{\n        try {\n            // In a real app, we'd send a request to the backend\n            // For now, we'll just add the payment method to the user data\n            if (!user) throw new Error(\"No user logged in\");\n            const updatedUser = {\n                ...user,\n                paymentMethods: [\n                    ...user.paymentMethods || [],\n                    paymentMethod\n                ]\n            };\n            setUser(updatedUser);\n            // Update localStorage\n            localStorage.setItem(\"booklendiverse_user\", JSON.stringify(updatedUser));\n            sonner__WEBPACK_IMPORTED_MODULE_3__.toast.success(\"Payment method added successfully\");\n        } catch (error) {\n            console.error(\"Error adding payment method:\", error);\n            sonner__WEBPACK_IMPORTED_MODULE_3__.toast.error(\"Failed to add payment method\");\n            throw error;\n        }\n    };\n    const removePaymentMethod = async (paymentMethodId)=>{\n        try {\n            // In a real app, we'd send a request to the backend\n            // For now, we'll just remove the payment method from the user data\n            if (!user) throw new Error(\"No user logged in\");\n            const updatedUser = {\n                ...user,\n                paymentMethods: user.paymentMethods?.filter((pm)=>pm.id !== paymentMethodId) || []\n            };\n            setUser(updatedUser);\n            // Update localStorage\n            localStorage.setItem(\"booklendiverse_user\", JSON.stringify(updatedUser));\n            sonner__WEBPACK_IMPORTED_MODULE_3__.toast.success(\"Payment method removed successfully\");\n        } catch (error) {\n            console.error(\"Error removing payment method:\", error);\n            sonner__WEBPACK_IMPORTED_MODULE_3__.toast.error(\"Failed to remove payment method\");\n            throw error;\n        }\n    };\n    const addBook = async (book)=>{\n        try {\n            if (!user) throw new Error(\"No user logged in\");\n            const token = localStorage.getItem(\"booklendiverse_token\");\n            if (!token) throw new Error(\"Not authenticated\");\n            console.log(\"Using token:\", token);\n            console.log(\"Book data:\", JSON.stringify(book));\n            // Make API call to create the book\n            const response = await fetch(\"http://localhost:5000/api/books\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"x-auth-token\": token\n                },\n                body: JSON.stringify(book),\n                credentials: \"include\"\n            });\n            if (!response.ok) {\n                const errorData = await response.json();\n                console.error(\"Error response from server:\", errorData);\n                throw new Error(errorData.message || \"Failed to create book\");\n            }\n            // Get the created book from response with server-generated ID\n            const newBook = await response.json();\n            console.log(\"Book created successfully:\", newBook);\n            // Add the book to all books\n            setAllBooks((prev)=>[\n                    ...prev,\n                    newBook\n                ]);\n            // Add the book to the user's books\n            const updatedUser = {\n                ...user,\n                books: [\n                    ...user.books || [],\n                    newBook\n                ]\n            };\n            setUser(updatedUser);\n            // Update localStorage\n            localStorage.setItem(\"booklendiverse_user\", JSON.stringify(updatedUser));\n            // Reload user data to ensure we have complete information\n            await loadUser();\n            return newBook;\n        } catch (error) {\n            console.error(\"Error adding book:\", error);\n            throw error;\n        }\n    };\n    const getBooks = ()=>{\n        return allBooks;\n    };\n    const getBookById = (id)=>{\n        return allBooks.find((book)=>book._id === id);\n    };\n    const deleteBook = async (id)=>{\n        try {\n            if (!user) throw new Error(\"No user logged in\");\n            const token = localStorage.getItem(\"booklendiverse_token\");\n            if (!token) throw new Error(\"Not authenticated\");\n            // Make API call to delete the book\n            const response = await fetch(`http://localhost:5000/api/books/${id}`, {\n                method: \"DELETE\",\n                headers: {\n                    \"x-auth-token\": token,\n                    \"Content-Type\": \"application/json\"\n                },\n                credentials: \"include\"\n            });\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.message || \"Failed to delete book\");\n            }\n            // Remove the book from all books\n            setAllBooks((prev)=>prev.filter((book)=>book._id !== id));\n            // Remove the book from the user's books\n            const updatedUser = {\n                ...user,\n                books: user.books?.filter((book)=>book._id !== id) || []\n            };\n            setUser(updatedUser);\n            // Update localStorage\n            localStorage.setItem(\"booklendiverse_user\", JSON.stringify(updatedUser));\n            // Reload user data to ensure we have complete information\n            await loadUser();\n        } catch (error) {\n            console.error(\"Error deleting book:\", error);\n            throw error;\n        }\n    };\n    const updateBook = async (id, data)=>{\n        try {\n            if (!user) throw new Error(\"No user logged in\");\n            // Find the book\n            const bookIndex = allBooks.findIndex((book)=>book._id === id);\n            if (bookIndex === -1) throw new Error(\"Book not found\");\n            // Update the book in all books\n            const updatedBook = {\n                ...allBooks[bookIndex],\n                ...data\n            };\n            const updatedAllBooks = [\n                ...allBooks\n            ];\n            updatedAllBooks[bookIndex] = updatedBook;\n            setAllBooks(updatedAllBooks);\n            // Update the book in the user's books if it belongs to the user\n            if (user.books) {\n                const userBookIndex = user.books.findIndex((book)=>book._id === id);\n                if (userBookIndex !== -1) {\n                    const updatedUserBooks = [\n                        ...user.books\n                    ];\n                    updatedUserBooks[userBookIndex] = updatedBook;\n                    const updatedUser = {\n                        ...user,\n                        books: updatedUserBooks\n                    };\n                    setUser(updatedUser);\n                    // Update localStorage\n                    localStorage.setItem(\"booklendiverse_user\", JSON.stringify(updatedUser));\n                }\n            }\n            return updatedBook;\n        } catch (error) {\n            console.error(\"Error updating book:\", error);\n            throw error;\n        }\n    };\n    // Toggle a bookmark for a book\n    const toggleBookmark = async (bookId)=>{\n        if (!user) {\n            sonner__WEBPACK_IMPORTED_MODULE_3__.toast.error(\"You must be logged in to bookmark books\");\n            return false;\n        }\n        try {\n            const userBookmarks = user.bookmarks || [];\n            const isCurrentlyBookmarked = userBookmarks.includes(bookId);\n            let updatedBookmarks;\n            if (isCurrentlyBookmarked) {\n                // Remove bookmark\n                updatedBookmarks = userBookmarks.filter((id)=>id !== bookId);\n                sonner__WEBPACK_IMPORTED_MODULE_3__.toast.success(\"Book removed from bookmarks\");\n            } else {\n                // Add bookmark\n                updatedBookmarks = [\n                    ...userBookmarks,\n                    bookId\n                ];\n                sonner__WEBPACK_IMPORTED_MODULE_3__.toast.success(\"Book added to bookmarks\");\n            }\n            const updatedUser = {\n                ...user,\n                bookmarks: updatedBookmarks\n            };\n            setUser(updatedUser);\n            localStorage.setItem(\"booklendiverse_user\", JSON.stringify(updatedUser));\n            return !isCurrentlyBookmarked;\n        } catch (error) {\n            console.error(\"Error toggling bookmark:\", error);\n            sonner__WEBPACK_IMPORTED_MODULE_3__.toast.error(\"Failed to update bookmarks\");\n            return false;\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(UserContext.Provider, {\n        value: {\n            user,\n            settings,\n            isLoading,\n            login,\n            register,\n            logout,\n            updateProfile,\n            updateSettings,\n            addPaymentMethod,\n            removePaymentMethod,\n            addBook,\n            getBooks,\n            getBookById,\n            deleteBook,\n            updateBook,\n            toggleBookmark\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"E:\\\\mini proj  6\\\\booklendiverse-main\\\\booklendiverse-main\\\\booklendiverse-main\\\\src\\\\lib\\\\contexts\\\\UserContext.tsx\",\n        lineNumber: 677,\n        columnNumber: 5\n    }, this);\n}\nfunction useUser() {\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(UserContext);\n    if (context === undefined) {\n        throw new Error(\"useUser must be used within a UserProvider\");\n    }\n    return context;\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/lib/contexts/UserContext.tsx\n");

/***/ }),

/***/ "./src/pages/_app.tsx":
/*!****************************!*\
  !*** ./src/pages/_app.tsx ***!
  \****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ App)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @tanstack/react-query */ \"@tanstack/react-query\");\n/* harmony import */ var next_themes__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next-themes */ \"next-themes\");\n/* harmony import */ var next_themes__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_themes__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _lib_contexts_UserContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/contexts/UserContext */ \"./src/lib/contexts/UserContext.tsx\");\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-hot-toast */ \"react-hot-toast\");\n/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../index.css */ \"./src/index.css\");\n/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_index_css__WEBPACK_IMPORTED_MODULE_5__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__, _lib_contexts_UserContext__WEBPACK_IMPORTED_MODULE_3__, react_hot_toast__WEBPACK_IMPORTED_MODULE_4__]);\n([_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__, _lib_contexts_UserContext__WEBPACK_IMPORTED_MODULE_3__, react_hot_toast__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n// Create a client\nconst queryClient = new _tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.QueryClient();\nfunction App({ Component, pageProps }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_tanstack_react_query__WEBPACK_IMPORTED_MODULE_1__.QueryClientProvider, {\n        client: queryClient,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_themes__WEBPACK_IMPORTED_MODULE_2__.ThemeProvider, {\n            attribute: \"class\",\n            defaultTheme: \"system\",\n            enableSystem: true,\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_lib_contexts_UserContext__WEBPACK_IMPORTED_MODULE_3__.UserProvider, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n                        ...pageProps\n                    }, void 0, false, {\n                        fileName: \"E:\\\\mini proj  6\\\\booklendiverse-main\\\\booklendiverse-main\\\\booklendiverse-main\\\\src\\\\pages\\\\_app.tsx\",\n                        lineNumber: 16,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_hot_toast__WEBPACK_IMPORTED_MODULE_4__.Toaster, {\n                        position: \"top-right\"\n                    }, void 0, false, {\n                        fileName: \"E:\\\\mini proj  6\\\\booklendiverse-main\\\\booklendiverse-main\\\\booklendiverse-main\\\\src\\\\pages\\\\_app.tsx\",\n                        lineNumber: 17,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"E:\\\\mini proj  6\\\\booklendiverse-main\\\\booklendiverse-main\\\\booklendiverse-main\\\\src\\\\pages\\\\_app.tsx\",\n                lineNumber: 15,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"E:\\\\mini proj  6\\\\booklendiverse-main\\\\booklendiverse-main\\\\booklendiverse-main\\\\src\\\\pages\\\\_app.tsx\",\n            lineNumber: 14,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"E:\\\\mini proj  6\\\\booklendiverse-main\\\\booklendiverse-main\\\\booklendiverse-main\\\\src\\\\pages\\\\_app.tsx\",\n        lineNumber: 13,\n        columnNumber: 5\n    }, this);\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvX2FwcC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDeUU7QUFDN0I7QUFDYztBQUNoQjtBQUNwQjtBQUV0QixrQkFBa0I7QUFDbEIsTUFBTUssY0FBYyxJQUFJTCw4REFBV0E7QUFFcEIsU0FBU00sSUFBSSxFQUFFQyxTQUFTLEVBQUVDLFNBQVMsRUFBWTtJQUM1RCxxQkFDRSw4REFBQ1Asc0VBQW1CQTtRQUFDUSxRQUFRSjtrQkFDM0IsNEVBQUNILHNEQUFhQTtZQUFDUSxXQUFVO1lBQVFDLGNBQWE7WUFBU0MsWUFBWTtzQkFDakUsNEVBQUNULG1FQUFZQTs7a0NBQ1gsOERBQUNJO3dCQUFXLEdBQUdDLFNBQVM7Ozs7OztrQ0FDeEIsOERBQUNKLG9EQUFPQTt3QkFBQ1MsVUFBUzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUs1QiIsInNvdXJjZXMiOlsid2VicGFjazovL2Jvb2tsZW5kaXZlcnNlLy4vc3JjL3BhZ2VzL19hcHAudHN4P2Y5ZDYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBBcHBQcm9wcyB9IGZyb20gJ25leHQvYXBwJztcbmltcG9ydCB7IFF1ZXJ5Q2xpZW50LCBRdWVyeUNsaWVudFByb3ZpZGVyIH0gZnJvbSAnQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5JztcbmltcG9ydCB7IFRoZW1lUHJvdmlkZXIgfSBmcm9tICduZXh0LXRoZW1lcyc7XG5pbXBvcnQgeyBVc2VyUHJvdmlkZXIgfSBmcm9tICdAL2xpYi9jb250ZXh0cy9Vc2VyQ29udGV4dCc7XG5pbXBvcnQgeyBUb2FzdGVyIH0gZnJvbSAncmVhY3QtaG90LXRvYXN0JztcbmltcG9ydCAnLi4vaW5kZXguY3NzJztcblxuLy8gQ3JlYXRlIGEgY2xpZW50XG5jb25zdCBxdWVyeUNsaWVudCA9IG5ldyBRdWVyeUNsaWVudCgpO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBBcHAoeyBDb21wb25lbnQsIHBhZ2VQcm9wcyB9OiBBcHBQcm9wcykge1xuICByZXR1cm4gKFxuICAgIDxRdWVyeUNsaWVudFByb3ZpZGVyIGNsaWVudD17cXVlcnlDbGllbnR9PlxuICAgICAgPFRoZW1lUHJvdmlkZXIgYXR0cmlidXRlPVwiY2xhc3NcIiBkZWZhdWx0VGhlbWU9XCJzeXN0ZW1cIiBlbmFibGVTeXN0ZW0+XG4gICAgICAgIDxVc2VyUHJvdmlkZXI+XG4gICAgICAgICAgPENvbXBvbmVudCB7Li4ucGFnZVByb3BzfSAvPlxuICAgICAgICAgIDxUb2FzdGVyIHBvc2l0aW9uPVwidG9wLXJpZ2h0XCIgLz5cbiAgICAgICAgPC9Vc2VyUHJvdmlkZXI+XG4gICAgICA8L1RoZW1lUHJvdmlkZXI+XG4gICAgPC9RdWVyeUNsaWVudFByb3ZpZGVyPlxuICApO1xufSAiXSwibmFtZXMiOlsiUXVlcnlDbGllbnQiLCJRdWVyeUNsaWVudFByb3ZpZGVyIiwiVGhlbWVQcm92aWRlciIsIlVzZXJQcm92aWRlciIsIlRvYXN0ZXIiLCJxdWVyeUNsaWVudCIsIkFwcCIsIkNvbXBvbmVudCIsInBhZ2VQcm9wcyIsImNsaWVudCIsImF0dHJpYnV0ZSIsImRlZmF1bHRUaGVtZSIsImVuYWJsZVN5c3RlbSIsInBvc2l0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/pages/_app.tsx\n");

/***/ }),

/***/ "./src/index.css":
/*!***********************!*\
  !*** ./src/index.css ***!
  \***********************/
/***/ (() => {



/***/ }),

/***/ "next-themes":
/*!******************************!*\
  !*** external "next-themes" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("next-themes");

/***/ }),

/***/ "next/dist/compiled/next-server/pages.runtime.dev.js":
/*!**********************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages.runtime.dev.js" ***!
  \**********************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/pages.runtime.dev.js");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react-dom":
/*!****************************!*\
  !*** external "react-dom" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("react-dom");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ }),

/***/ "react/jsx-runtime":
/*!************************************!*\
  !*** external "react/jsx-runtime" ***!
  \************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-runtime");

/***/ }),

/***/ "@tanstack/react-query":
/*!****************************************!*\
  !*** external "@tanstack/react-query" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = import("@tanstack/react-query");;

/***/ }),

/***/ "react-hot-toast":
/*!**********************************!*\
  !*** external "react-hot-toast" ***!
  \**********************************/
/***/ ((module) => {

"use strict";
module.exports = import("react-hot-toast");;

/***/ }),

/***/ "sonner":
/*!*************************!*\
  !*** external "sonner" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = import("sonner");;

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@swc"], () => (__webpack_exec__("./src/pages/_app.tsx")));
module.exports = __webpack_exports__;

})();